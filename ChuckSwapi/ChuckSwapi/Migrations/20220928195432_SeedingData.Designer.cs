// <auto-generated />
using System;
using ChuckSwapi.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ChuckSwapi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220928195432_SeedingData")]
    partial class SeedingData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ChuckSwapi.Entities.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "animal"
                        },
                        new
                        {
                            Id = 2,
                            Name = "career"
                        },
                        new
                        {
                            Id = 3,
                            Name = "celebrity"
                        },
                        new
                        {
                            Id = 4,
                            Name = "explicit"
                        },
                        new
                        {
                            Id = 5,
                            Name = "fashion"
                        },
                        new
                        {
                            Id = 6,
                            Name = "sport"
                        },
                        new
                        {
                            Id = 7,
                            Name = "money"
                        },
                        new
                        {
                            Id = 8,
                            Name = "movie"
                        },
                        new
                        {
                            Id = 9,
                            Name = "dev"
                        });
                });

            modelBuilder.Entity("ChuckSwapi.Entities.Models.Film", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PeopleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PeopleId");

                    b.ToTable("Film");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "https://swapi.dev/api/films/1/",
                            PeopleId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "https://swapi.dev/api/films/2/",
                            PeopleId = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = "https://swapi.dev/api/films/3/",
                            PeopleId = 1
                        },
                        new
                        {
                            Id = 4,
                            Name = "https://swapi.dev/api/films/6/",
                            PeopleId = 1
                        },
                        new
                        {
                            Id = 5,
                            Name = "https://swapi.dev/api/films/1/",
                            PeopleId = 3
                        },
                        new
                        {
                            Id = 6,
                            Name = "https://swapi.dev/api/films/2/",
                            PeopleId = 3
                        },
                        new
                        {
                            Id = 7,
                            Name = "https://swapi.dev/api/films/3/",
                            PeopleId = 3
                        },
                        new
                        {
                            Id = 8,
                            Name = "https://swapi.dev/api/films/4/",
                            PeopleId = 3
                        },
                        new
                        {
                            Id = 9,
                            Name = "https://swapi.dev/api/films/5/",
                            PeopleId = 3
                        },
                        new
                        {
                            Id = 10,
                            Name = "https://swapi.dev/api/films/1/",
                            PeopleId = 2
                        },
                        new
                        {
                            Id = 11,
                            Name = "https://swapi.dev/api/films/2/",
                            PeopleId = 2
                        },
                        new
                        {
                            Id = 12,
                            Name = "https://swapi.dev/api/films/3/",
                            PeopleId = 2
                        },
                        new
                        {
                            Id = 13,
                            Name = "https://swapi.dev/api/films/4/",
                            PeopleId = 2
                        },
                        new
                        {
                            Id = 14,
                            Name = "https://swapi.dev/api/films/5/",
                            PeopleId = 2
                        });
                });

            modelBuilder.Entity("ChuckSwapi.Entities.Models.People", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("BirthYear")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Edited")
                        .HasColumnType("datetime2");

                    b.Property<string>("EyeColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HairColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Height")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HomeWorld")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mass")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SkinColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("People");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthYear = "19BBY",
                            Created = new DateTime(2022, 9, 28, 19, 54, 31, 380, DateTimeKind.Utc).AddTicks(6011),
                            Edited = new DateTime(2022, 9, 28, 19, 54, 31, 380, DateTimeKind.Utc).AddTicks(6014),
                            EyeColor = "blue",
                            Gender = "male",
                            HairColor = "blond",
                            Height = "172",
                            HomeWorld = "https://swapi.dev/api/planets/1/",
                            Mass = "77",
                            Name = "Luke Skywalker",
                            SkinColor = "fair",
                            Url = "https://swapi.dev/api/people/1/"
                        },
                        new
                        {
                            Id = 2,
                            BirthYear = "112BBY",
                            Created = new DateTime(2022, 9, 28, 19, 54, 31, 380, DateTimeKind.Utc).AddTicks(6026),
                            Edited = new DateTime(2022, 9, 28, 19, 54, 31, 380, DateTimeKind.Utc).AddTicks(6027),
                            EyeColor = "yellow",
                            Gender = "n/a",
                            HairColor = "n/a",
                            Height = "167",
                            HomeWorld = "https://swapi.dev/api/planets/1/",
                            Mass = "75",
                            Name = "C-3PO",
                            SkinColor = "fair",
                            Url = "https://swapi.dev/api/people/1/"
                        },
                        new
                        {
                            Id = 3,
                            BirthYear = "33BBY",
                            Created = new DateTime(2022, 9, 28, 19, 54, 31, 380, DateTimeKind.Utc).AddTicks(6029),
                            Edited = new DateTime(2022, 9, 28, 19, 54, 31, 380, DateTimeKind.Utc).AddTicks(6030),
                            EyeColor = "red",
                            Gender = "n/a",
                            HairColor = "n/a",
                            Height = "96",
                            HomeWorld = "https://swapi.dev/api/planets/1/",
                            Mass = "32",
                            Name = "R2-D2",
                            SkinColor = "white",
                            Url = "https://swapi.dev/api/people/1/"
                        });
                });

            modelBuilder.Entity("ChuckSwapi.Entities.Models.Species", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PeopleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PeopleId");

                    b.ToTable("Species");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "https://swapi.dev/api/species/2/",
                            PeopleId = 2
                        },
                        new
                        {
                            Id = 2,
                            Name = "https://swapi.dev/api/species/2/",
                            PeopleId = 3
                        });
                });

            modelBuilder.Entity("ChuckSwapi.Entities.Models.Starship", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PeopleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PeopleId");

                    b.ToTable("Starship");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "https://swapi.dev/api/starships/12/",
                            PeopleId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "https://swapi.dev/api/starships/22/",
                            PeopleId = 1
                        });
                });

            modelBuilder.Entity("ChuckSwapi.Entities.Models.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PeopleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PeopleId");

                    b.ToTable("Vehicle");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "https://swapi.dev/api/vehicles/14/",
                            PeopleId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "https://swapi.dev/api/vehicles/14/",
                            PeopleId = 1
                        });
                });

            modelBuilder.Entity("ChuckSwapi.Entities.Models.Film", b =>
                {
                    b.HasOne("ChuckSwapi.Entities.Models.People", "People")
                        .WithMany("Films")
                        .HasForeignKey("PeopleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("People");
                });

            modelBuilder.Entity("ChuckSwapi.Entities.Models.Species", b =>
                {
                    b.HasOne("ChuckSwapi.Entities.Models.People", "People")
                        .WithMany("Species")
                        .HasForeignKey("PeopleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("People");
                });

            modelBuilder.Entity("ChuckSwapi.Entities.Models.Starship", b =>
                {
                    b.HasOne("ChuckSwapi.Entities.Models.People", "People")
                        .WithMany("StarShips")
                        .HasForeignKey("PeopleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("People");
                });

            modelBuilder.Entity("ChuckSwapi.Entities.Models.Vehicle", b =>
                {
                    b.HasOne("ChuckSwapi.Entities.Models.People", "People")
                        .WithMany("Vehicles")
                        .HasForeignKey("PeopleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("People");
                });

            modelBuilder.Entity("ChuckSwapi.Entities.Models.People", b =>
                {
                    b.Navigation("Films");

                    b.Navigation("Species");

                    b.Navigation("StarShips");

                    b.Navigation("Vehicles");
                });
#pragma warning restore 612, 618
        }
    }
}
